package components

import "fmt"

// Pagination - Reusable pagination component
templ Pagination(total int64, currentPage int, limit int) {
	<div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6 rounded-lg">
		@PaginationMobile(total, currentPage, limit)
		@PaginationDesktop(total, currentPage, limit)
	</div>
}

// PaginationMobile - Mobile-only pagination controls
templ PaginationMobile(total int64, currentPage int, limit int) {
	<div class="flex flex-1 justify-between sm:hidden">
		if currentPage > 1 {
			<button 
				hx-get={ fmt.Sprintf("/aircraft-list?page=%d", currentPage-1) }
				hx-target="#aircraft-container"
				hx-indicator="#loading"
				class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
			>
				Previous
			</button>
		}
		
		if int64(currentPage * limit) < total {
			<button 
				hx-get={ fmt.Sprintf("/aircraft-list?page=%d", currentPage+1) }
				hx-target="#aircraft-container"
				hx-indicator="#loading"
				class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
			>
				Next
			</button>
		}
	</div>
}

// PaginationDesktop - Desktop pagination with page numbers
templ PaginationDesktop(total int64, currentPage int, limit int) {
	<div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
		@PaginationInfo(total, currentPage, limit)
		@PaginationControls(total, currentPage, limit)
	</div>
}

// PaginationInfo - Shows "Showing X to Y of Z results"
templ PaginationInfo(total int64, currentPage int, limit int) {
	<div>
		<p class="text-sm text-gray-700">
			Showing
			<span class="font-medium">{ fmt.Sprintf("%d", (currentPage-1)*limit+1) }</span>
			to
			<span class="font-medium">
				{ fmt.Sprintf("%d", func() int {
					end := currentPage * limit
					if int64(end) > total {
						return int(total)
					}
					return end
				}()) }
			</span>
			of
			<span class="font-medium">{ fmt.Sprintf("%d", total) }</span>
			results
		</p>
	</div>
}

// PaginationControls - Navigation buttons and page numbers
templ PaginationControls(total int64, currentPage int, limit int) {
	<div>
		<nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
			@PaginationPrevButton(currentPage)
			@PaginationNumbers(total, currentPage, limit)
			@PaginationNextButton(total, currentPage, limit)
		</nav>
	</div>
}

// PaginationPrevButton - Previous page button
templ PaginationPrevButton(currentPage int) {
	if currentPage > 1 {
		<button 
			hx-get={ fmt.Sprintf("/aircraft-list?page=%d", currentPage-1) }
			hx-target="#aircraft-container"
			hx-indicator="#loading"
			class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
			aria-label="Previous page"
		>
			<span class="sr-only">Previous</span>
			<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
				<path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd"></path>
			</svg>
		</button>
	}
}

// PaginationNextButton - Next page button
templ PaginationNextButton(total int64, currentPage int, limit int) {
	if int64(currentPage * limit) < total {
		<button 
			hx-get={ fmt.Sprintf("/aircraft-list?page=%d", currentPage+1) }
			hx-target="#aircraft-container"
			hx-indicator="#loading"
			class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
			aria-label="Next page"
		>
			<span class="sr-only">Next</span>
			<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
				<path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
			</svg>
		</button>
	}
}

// PaginationNumbers - Page number buttons
templ PaginationNumbers(total int64, currentPage int, limit int) {
	{{ 
		totalPages := int((total + int64(limit) - 1) / int64(limit))
		startPage := currentPage - 2
		if startPage < 1 { startPage = 1 }
		endPage := startPage + 4
		if endPage > totalPages { endPage = totalPages }
		if endPage - startPage < 4 && startPage > 1 {
			startPage = endPage - 4
			if startPage < 1 { startPage = 1 }
		}
	}}
	
	for pageNum := startPage; pageNum <= endPage; pageNum++ {
		if pageNum == currentPage {
			<span class="relative z-10 inline-flex items-center bg-blue-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600">
				{ fmt.Sprintf("%d", pageNum) }
			</span>
		} else {
			<button 
				hx-get={ fmt.Sprintf("/aircraft-list?page=%d", pageNum) }
				hx-target="#aircraft-container"
				hx-indicator="#loading"
				class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
			>
				{ fmt.Sprintf("%d", pageNum) }
			</button>
		}
	}
}