package components

import "github.com/dukerupert/faa-aircraft-search/internal/db"
import "strconv"
import "fmt"

templ AircraftList(aircraft []db.AircraftDatum, total int64, page int, limit int) {
	<div class="bg-white shadow overflow-hidden sm:rounded-md">
		<ul role="list" class="divide-y divide-gray-200">
			for _, a := range aircraft {
				@AircraftListItem(a)
			}
		</ul>
	</div>
	if total > int64(limit) {
		@Pagination(total, page, limit)
	}
}

templ AircraftListItem(aircraft db.AircraftDatum) {
	<li>
		<div class="px-4 py-4 sm:px-6">
			<div class="flex items-center justify-between">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
							<span class="text-sm font-medium text-gray-700">{ aircraft.IcaoCode.String }</span>
						</div>
					</div>
					<div class="ml-4">
						<div class="flex items-center">
							<p class="text-sm font-medium text-indigo-600 truncate">
								{ aircraft.Manufacturer.String } { aircraft.ModelFaa.String }
							</p>
						</div>
						<div class="mt-1 flex items-center text-sm text-gray-500">
							<span>FAA: { aircraft.FaaDesignator.String }</span>
							if aircraft.Class.String != "" {
								<span class="mx-2">â€¢</span>
								<span>Class: { aircraft.Class.String }</span>
							}
						</div>
					</div>
				</div>
				<div class="flex items-center text-sm text-gray-500">
					if aircraft.NumEngines.Valid {
						<span class="mr-4">{ strconv.Itoa(int(aircraft.NumEngines.Int32)) } engines</span>
					}
					<button class="text-indigo-600 hover:text-indigo-900 font-medium">
						View Details
					</button>
				</div>
			</div>
		</div>
	</li>
}

templ Pagination(total int64, page int, limit int) {
	{{ totalPages := int((total + int64(limit) - 1) / int64(limit)) }}
	<nav class="flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 mt-6">
		<div class="-mt-px flex w-0 flex-1">
			if page > 1 {
				<a 
					href={ templ.URL(fmt.Sprintf("/?page=%d", page-1)) }
					class="inline-flex items-center border-t-2 border-transparent pt-4 pr-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
				>
					<svg class="mr-3 size-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M18 10a.75.75 0 0 1-.75.75H4.66l2.1 1.95a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 1 1 1.02 1.1l-2.1 1.95h12.59A.75.75 0 0 1 18 10Z" clip-rule="evenodd"></path>
					</svg>
					Previous
				</a>
			} else {
				<span class="inline-flex items-center border-t-2 border-transparent pt-4 pr-1 text-sm font-medium text-gray-300">
					<svg class="mr-3 size-5 text-gray-300" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M18 10a.75.75 0 0 1-.75.75H4.66l2.1 1.95a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 1 1 1.02 1.1l-2.1 1.95h12.59A.75.75 0 0 1 18 10Z" clip-rule="evenodd"></path>
					</svg>
					Previous
				</span>
			}
		</div>
		<div class="hidden md:-mt-px md:flex">
			@SimplePaginationNumbers(total, page, limit)
		</div>
		<div class="-mt-px flex w-0 flex-1 justify-end">
			if page < totalPages {
				<a 
					href={ templ.URL(fmt.Sprintf("/?page=%d", page+1)) }
					class="inline-flex items-center border-t-2 border-transparent pt-4 pl-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
				>
					Next
					<svg class="ml-3 size-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M2 10a.75.75 0 0 1 .75-.75h12.59l-2.1-1.95a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.1-1.95H2.75A.75.75 0 0 1 2 10Z" clip-rule="evenodd"></path>
					</svg>
				</a>
			} else {
				<span class="inline-flex items-center border-t-2 border-transparent pt-4 pl-1 text-sm font-medium text-gray-300">
					Next
					<svg class="ml-3 size-5 text-gray-300" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M2 10a.75.75 0 0 1 .75-.75h12.59l-2.1-1.95a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.1-1.95H2.75A.75.75 0 0 1 2 10Z" clip-rule="evenodd"></path>
					</svg>
				</span>
			}
		</div>
	</nav>
}

templ SimplePaginationNumbers(total int64, currentPage int, limit int) {
	{{ totalPages := int((total + int64(limit) - 1) / int64(limit)) }}
	
	// Show current page
	<a 
		href={ templ.URL(fmt.Sprintf("/?page=%d", currentPage)) }
		class="inline-flex items-center border-t-2 border-indigo-500 px-4 pt-4 text-sm font-medium text-indigo-600" 
		aria-current="page"
	>
		{ strconv.Itoa(currentPage) }
	</a>
	
	// Show next page if exists
	if currentPage < totalPages {
		<a 
			href={ templ.URL(fmt.Sprintf("/?page=%d", currentPage+1)) }
			class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
		>
			{ strconv.Itoa(currentPage+1) }
		</a>
	}
	
	// Show one more page if exists
	if currentPage+1 < totalPages {
		<a 
			href={ templ.URL(fmt.Sprintf("/?page=%d", currentPage+2)) }
			class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
		>
			{ strconv.Itoa(currentPage+2) }
		</a>
	}
	
	// Show ellipsis if there are more pages
	if currentPage+2 < totalPages {
		<span class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500">...</span>
		<a 
			href={ templ.URL(fmt.Sprintf("/?page=%d", totalPages)) }
			class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
		>
			{ strconv.Itoa(totalPages) }
		</a>
	}
}

templ SimpleSearchResults(message string) {
	<div id="search-results" class="bg-white rounded-lg shadow-md p-12 text-center">
		<h3 class="text-lg font-medium text-gray-900 mb-2">Search Results</h3>
		<p class="text-gray-500">{ message }</p>
	</div>
}